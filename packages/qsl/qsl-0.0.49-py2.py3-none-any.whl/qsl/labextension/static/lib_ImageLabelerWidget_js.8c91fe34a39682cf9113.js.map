{"version":3,"file":"lib_ImageLabelerWidget_js.8c91fe34a39682cf9113.js","mappings":";;;;;;;;;AAAa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,GAAG,yBAAyB;AACpD,gCAAgC,mBAAO,CAAC,oDAAO;AAC/C,oCAAoC,mBAAO,CAAC,4DAAW;AACvD,oBAAoB,mBAAO,CAAC,oFAAuB;AACnD,eAAe,mBAAO,CAAC,oFAAuB;AAC9C,8BAA8B,mBAAO,CAAC,oGAAqB;AAC3D,gBAAgB,mBAAO,CAAC,+BAAS;AACjC,kBAAkB,mBAAO,CAAC,mCAAW;AACrC;AACA;AACA;AACA,cAAc,wBAAwB;AACtC,cAAc,SAAS,sCAAsC;AAC7D;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,+CAA+C;AAClE;AACA,mDAAmD;AACnD;AACA;AACA,WAAW,uGAAuG,qBAAqB,GAAG,gGAAgG,+CAA+C;AACzR;AACA;AACA;AACA,2DAA2D,uBAAuB,4SAA4S;AAC9X;AACA;AACA,yBAAyB;AACzB,gDAAgD;AAChD;AACA;AACA;AACA,kDAAkD;AAClD,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB;AACxB;;;;;;;;;;AC5Ha;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,qBAAqB;AAC7C,gCAAgC,mBAAO,CAAC,oDAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB;AACrB;;;;;;;;;;ACtCa;AACb;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,sBAAsB;AAC5C;AACA;AACA;AACA,aAAa,mBAAO,CAAC,uCAAiB;AACtC,sBAAsB;AACtB,mBAAmB;AACnB","sources":["webpack://qslwidgets/./lib/ImageLabelerWidget.js","webpack://qslwidgets/./lib/hooks.js","webpack://qslwidgets/./lib/version.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageLabelerView = exports.ImageLabelerModel = void 0;\nconst react_1 = __importDefault(require(\"react\"));\nconst react_dom_1 = __importDefault(require(\"react-dom\"));\nconst coreutils_1 = require(\"@jupyterlab/coreutils\");\nconst base_1 = require(\"@jupyter-widgets/base\");\nconst react_image_labeler_1 = require(\"react-image-labeler\");\nconst hooks_1 = require(\"./hooks\");\nconst version_1 = require(\"./version\");\nconst DEFAULT_PROPERTIES = {\n    type: \"image\",\n    url: \"\",\n    config: { image: [], regions: [] },\n    labels: { image: {}, polygons: [], masks: [], boxes: [] },\n    updated: Date.now(),\n    action: \"\",\n    metadata: {},\n    preload: [],\n    showNavigation: true,\n    maxCanvasSize: 512,\n    buttons: {\n        next: true,\n        prev: true,\n        save: true,\n        config: true,\n        delete: true,\n        ignore: true,\n        unignore: true,\n    },\n    base: {\n        serverRoot: \"\",\n        url: \"\",\n    },\n    progress: -1,\n    mode: \"light\",\n};\nconst Widget = ({ model }) => {\n    // @ts-ignore\n    const [config, setConfig] = hooks_1.useModelState(\"config\", model);\n    // @ts-ignore\n    const [url, setUrl] = hooks_1.useModelState(\"url\", model);\n    // @ts-ignore\n    const [labels, setLabels] = hooks_1.useModelState(\"labels\", model);\n    // @ts-ignore\n    const [updated, setUpdated] = hooks_1.useModelState(\"updated\", model);\n    // @ts-ignore\n    const [action, setAction] = hooks_1.useModelState(\"action\", model);\n    // @ts-ignore\n    const [type, setType] = hooks_1.useModelState(\"type\", model);\n    // @ts-ignore\n    const [base, setBase] = hooks_1.useModelState(\"base\", model);\n    // @ts-ignore\n    const [progress, setProgress] = hooks_1.useModelState(\"progress\", model);\n    // @ts-ignore\n    const [mode, setMode] = hooks_1.useModelState(\"mode\", model);\n    // @ts-ignore\n    const [buttons, setButtons] = hooks_1.useModelState(\"buttons\", model);\n    // @ts-ignore\n    const [metadata, setMetadata] = hooks_1.useModelState(\"metadata\", model);\n    // @ts-ignore\n    const [preload, setPreload] = hooks_1.useModelState(\"preload\", model);\n    // @ts-ignore\n    const [maxCanvasSize, setMaxCanvasSize] = hooks_1.useModelState(\"maxCanvasSize\", model);\n    // @ts-ignore\n    const [showNavigation, setShowNavigation] = hooks_1.useModelState(\"showNavigation\", model);\n    react_1.default.useEffect(() => {\n        setBase({\n            serverRoot: coreutils_1.PageConfig.getOption(\"serverRoot\"),\n            url: coreutils_1.PageConfig.getBaseUrl(),\n        });\n    });\n    const props = {\n        src: url,\n        config,\n        metadata,\n        callbacks: {\n            onSave: buttons[\"save\"]\n                ? (labels) => {\n                    setLabels(labels);\n                    setUpdated(Date.now());\n                }\n                : undefined,\n            onSaveConfig: buttons[\"config\"] ? setConfig : undefined,\n            onNext: buttons[\"next\"] ? () => setAction(\"next\") : undefined,\n            onPrev: buttons[\"prev\"] ? () => setAction(\"prev\") : undefined,\n            onDelete: buttons[\"delete\"] ? () => setAction(\"delete\") : undefined,\n            onIgnore: buttons[\"ignore\"] ? () => setAction(\"ignore\") : undefined,\n            onUnignore: buttons[\"unignore\"] ? () => setAction(\"unignore\") : undefined,\n        },\n        preload,\n        options: { progress, mode, maxCanvasSize, showNavigation },\n    };\n    return (react_1.default.createElement(\"div\", { style: {\n            padding: 16,\n            backgroundColor: mode == \"dark\" ? \"rgb(18, 18, 18)\" : \"white\",\n        } }, type == \"image\" ? (react_1.default.createElement(react_image_labeler_1.ImageLabeler, Object.assign({ labels: (labels || {}) }, props))) : (react_1.default.createElement(react_image_labeler_1.VideoLabeler, Object.assign({ labels: (Array.isArray(labels) ? labels : []) }, props)))));\n};\nclass ImageLabelerModel extends base_1.DOMWidgetModel {\n    defaults() {\n        return Object.assign(Object.assign(Object.assign({}, super.defaults()), { _model_name: ImageLabelerModel.model_name, _model_module: ImageLabelerModel.model_module, _model_module_version: ImageLabelerModel.model_module_version, _view_name: ImageLabelerModel.view_name, _view_module: ImageLabelerModel.view_module, _view_module_version: ImageLabelerModel.view_module_version }), DEFAULT_PROPERTIES);\n    }\n}\nexports.ImageLabelerModel = ImageLabelerModel;\nImageLabelerModel.serializers = Object.assign({}, base_1.DOMWidgetModel.serializers);\nImageLabelerModel.model_name = \"ImageLabelerModel\";\nImageLabelerModel.model_module = version_1.MODULE_NAME;\nImageLabelerModel.model_module_version = version_1.MODULE_VERSION;\nImageLabelerModel.view_name = \"ImageLabelerView\"; // Set to null if no view\nImageLabelerModel.view_module = version_1.MODULE_NAME; // Set to null if no view\nImageLabelerModel.view_module_version = version_1.MODULE_VERSION;\nclass ImageLabelerView extends base_1.DOMWidgetView {\n    render() {\n        this.el.classList.add(\"qsl-image-labeler-widget\");\n        const component = react_1.default.createElement(Widget, {\n            model: this.model,\n        });\n        react_dom_1.default.render(component, this.el);\n    }\n}\nexports.ImageLabelerView = ImageLabelerView;\n//# sourceMappingURL=ImageLabelerWidget.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useModelEvent = exports.useModelState = void 0;\nconst react_1 = __importDefault(require(\"react\"));\n/**\n *\n * @param name property name in the Python model object.\n * @returns model state and set state function.\n */\nconst useModelState = (name, model) => {\n    const [state, setState] = react_1.default.useState(model === null || model === void 0 ? void 0 : model.get(name));\n    useModelEvent(model, `change:${name}`, (model) => {\n        setState(model.get(name));\n    }, [name]);\n    function updateModel(val, options) {\n        model === null || model === void 0 ? void 0 : model.set(name, val, options);\n        model === null || model === void 0 ? void 0 : model.save_changes();\n    }\n    return [state, updateModel];\n};\nexports.useModelState = useModelState;\n/**\n * Subscribes a listener to the model event loop.\n * @param event String identifier of the event that will trigger the callback.\n * @param callback Action to perform when event happens.\n * @param deps Dependencies that should be kept up to date within the callback.\n */\nconst useModelEvent = (model, event, callback, deps) => {\n    react_1.default.useEffect(() => {\n        const callbackWrapper = (e) => model && callback(model, e);\n        model === null || model === void 0 ? void 0 : model.on(event, callbackWrapper);\n        return () => void (model === null || model === void 0 ? void 0 : model.unbind(event, callbackWrapper));\n    }, (deps || []).concat([model]));\n};\nexports.useModelEvent = useModelEvent;\n//# sourceMappingURL=hooks.js.map","\"use strict\";\n// Copyright (c) Fausto Morales\n// Distributed under the terms of the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MODULE_NAME = exports.MODULE_VERSION = void 0;\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst data = require(\"../package.json\");\nexports.MODULE_VERSION = data.version;\nexports.MODULE_NAME = data.name;\n//# sourceMappingURL=version.js.map"],"names":[],"sourceRoot":""}