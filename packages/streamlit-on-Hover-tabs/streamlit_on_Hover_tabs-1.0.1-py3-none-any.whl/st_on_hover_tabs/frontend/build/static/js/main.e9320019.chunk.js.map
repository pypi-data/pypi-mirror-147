{"version":3,"sources":["OnHoverTabs.tsx","index.tsx"],"names":["OnHoverTabs","render","labelName","props","args","iconName","styles","data","forEach","v","i","state","icon","label","results","map","id","className","style","key","onClick","setState","prevState","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"0TAeMA,G,wNAEGC,OAAS,WAEd,IAAMC,EAAqB,EAAKC,MAAMC,KAAX,QACrBC,EAAoB,EAAKF,MAAMC,KAAX,SACpBE,EAAc,EAAKH,MAAMC,KAAX,QAA6B,GAE7CG,EAAa,GACjBF,EAASG,SAAQ,SAACC,EAAEC,GAAH,OACfH,EAAK,GAAD,mBAAMA,GAAN,CAAY,CAAC,GAAKG,EAAE,EAAG,MAASR,EAAUQ,GAAI,KAAOD,QAG3D,EAAKE,MAAQ,CAACC,KAAKL,EAAK,GAAGK,KACbC,MAAMN,EAAK,GAAGM,OAE5B,IAAMC,EAAUP,EAAKQ,KAAI,gBAAEC,EAAF,EAAEA,GAAIJ,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAZ,OACT,wCAAMI,UAAU,iBAAoBC,gBAAMZ,EAAM,kBAC9C,sCAAIW,UAAU,OACRC,gBAAMZ,EAAM,UADlB,CAEEa,IAAKH,EACLI,QAAS,kBAAM,EAAKC,UAClB,SAAAC,GAAS,MAAK,CAACV,KAAKA,EAAMC,MAAMA,MAClB,kBAAMU,IAAUC,kBAAkBX,SACjD,qCAAGI,UAAU,kBAAqBC,gBAAMZ,EAAM,YAAiBM,GAAS,0BAAMK,UAAU,aAAaJ,QAG1H,OAEE,uCAAKI,UAAU,UAAaC,gBAAMZ,EAAM,SACtC,wBAAIW,UAAU,oBACbH,K,yBA/BiBW,MAsCTC,cAAwB1B,GCjDzC2B,IAAS1B,OACP,kBAAC,IAAM2B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e9320019.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\nimport { style } from 'glamor';\r\nimport \"./component.css\"\r\nimport \"./icons/icon.css\"\r\n\r\ninterface State {\r\n  label: string,\r\n  icon: string\r\n}\r\n\r\nclass OnHoverTabs extends StreamlitComponentBase<State> {\r\n\r\n  public render = (): ReactNode => {\r\n\r\n    const labelName:string[] = this.props.args[\"tabName\"]\r\n    const iconName:string[] = this.props.args[\"iconName\"]\r\n    const styles: any = this.props.args['styles'] || {}\r\n\r\n    let data:any[] = [];\r\n    iconName.forEach((v,i) => \r\n      data= [...data, {\"id\":i+1, \"label\": labelName[i], \"icon\":v}]\r\n    )\r\n\r\n    this.state = {icon:data[0].icon,\r\n                  label:data[0].label}\r\n   \r\n    const results = data.map(({id, icon, label}) => (\r\n                    <span className=\"tab-container\" {...style(styles['tabOptionsStyle'])}>\r\n                      <li className=\"tab\"\r\n                        {...style(styles['tabStyle'])}                                   \r\n                        key={id}\r\n                        onClick={() => this.setState(\r\n                          prevState => ({icon:icon, label:label}),\r\n                                        () => Streamlit.setComponentValue(label)\r\n                      )}><i className=\"material-icons\" {...style(styles['iconStyle'])}>{icon}</i><span className=\"labelName\">{label}</span></li></span>\r\n                    ))\r\n\r\n    return (\r\n  \r\n      <div className=\"navtab\" {...style(styles['navtab'])}> \r\n        <ul className=\"all-tabs-options\">\r\n        {results}\r\n        </ul> \r\n      </div>\r\n    )\r\n  }\r\n}   \r\n\r\n  export default withStreamlitConnection(OnHoverTabs)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport OnHoverTabs from \"./OnHoverTabs\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <OnHoverTabs/>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}