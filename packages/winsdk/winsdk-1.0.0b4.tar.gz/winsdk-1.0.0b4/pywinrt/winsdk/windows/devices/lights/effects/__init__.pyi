# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.4

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.devices.lights
except Exception:
    pass

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

try:
    import winsdk.windows.graphics.imaging
except Exception:
    pass

try:
    import winsdk.windows.ui
except Exception:
    pass

class LampArrayEffectCompletionBehavior(enum.IntEnum):
    CLEAR_STATE = 0
    KEEP_STATE = 1

class LampArrayEffectStartMode(enum.IntEnum):
    SEQUENTIAL = 0
    SIMULTANEOUS = 1

class LampArrayRepetitionMode(enum.IntEnum):
    OCCURRENCES = 0
    FOREVER = 1

class LampArrayBitmapEffect(_winrt.Object, interfaces=[ILampArrayEffect]):
    update_interval: winsdk.windows.foundation.TimeSpan
    start_delay: winsdk.windows.foundation.TimeSpan
    duration: winsdk.windows.foundation.TimeSpan
    suggested_bitmap_size: winsdk.windows.foundation.Size
    z_index: _winrt.Int32
    @staticmethod
    def _from(obj: _winrt.Object) -> LampArrayBitmapEffect: ...
    def __init__(self, lamp_array: typing.Optional[winsdk.windows.devices.lights.LampArray], lamp_indexes: typing.Sequence[_winrt.Int32]) -> None: ...
    def add_bitmap_requested(self, handler: winsdk.windows.foundation.TypedEventHandler[LampArrayBitmapEffect, LampArrayBitmapRequestedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_bitmap_requested(self, token: winsdk.windows.foundation.EventRegistrationToken) -> None: ...

class LampArrayBitmapRequestedEventArgs(_winrt.Object, interfaces=[]):
    since_started: winsdk.windows.foundation.TimeSpan
    @staticmethod
    def _from(obj: _winrt.Object) -> LampArrayBitmapRequestedEventArgs: ...
    def update_bitmap(self, bitmap: typing.Optional[winsdk.windows.graphics.imaging.SoftwareBitmap]) -> None: ...

class LampArrayBlinkEffect(_winrt.Object, interfaces=[ILampArrayEffect]):
    sustain_duration: winsdk.windows.foundation.TimeSpan
    start_delay: winsdk.windows.foundation.TimeSpan
    repetition_mode: LampArrayRepetitionMode
    repetition_delay: winsdk.windows.foundation.TimeSpan
    occurrences: _winrt.Int32
    decay_duration: winsdk.windows.foundation.TimeSpan
    color: winsdk.windows.ui.Color
    attack_duration: winsdk.windows.foundation.TimeSpan
    z_index: _winrt.Int32
    @staticmethod
    def _from(obj: _winrt.Object) -> LampArrayBlinkEffect: ...
    def __init__(self, lamp_array: typing.Optional[winsdk.windows.devices.lights.LampArray], lamp_indexes: typing.Sequence[_winrt.Int32]) -> None: ...

class LampArrayColorRampEffect(_winrt.Object, interfaces=[ILampArrayEffect]):
    start_delay: winsdk.windows.foundation.TimeSpan
    ramp_duration: winsdk.windows.foundation.TimeSpan
    completion_behavior: LampArrayEffectCompletionBehavior
    color: winsdk.windows.ui.Color
    z_index: _winrt.Int32
    @staticmethod
    def _from(obj: _winrt.Object) -> LampArrayColorRampEffect: ...
    def __init__(self, lamp_array: typing.Optional[winsdk.windows.devices.lights.LampArray], lamp_indexes: typing.Sequence[_winrt.Int32]) -> None: ...

class LampArrayCustomEffect(_winrt.Object, interfaces=[ILampArrayEffect]):
    update_interval: winsdk.windows.foundation.TimeSpan
    duration: winsdk.windows.foundation.TimeSpan
    z_index: _winrt.Int32
    @staticmethod
    def _from(obj: _winrt.Object) -> LampArrayCustomEffect: ...
    def __init__(self, lamp_array: typing.Optional[winsdk.windows.devices.lights.LampArray], lamp_indexes: typing.Sequence[_winrt.Int32]) -> None: ...
    def add_update_requested(self, handler: winsdk.windows.foundation.TypedEventHandler[LampArrayCustomEffect, LampArrayUpdateRequestedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_update_requested(self, token: winsdk.windows.foundation.EventRegistrationToken) -> None: ...

class LampArrayEffectPlaylist(_winrt.Object, interfaces=[winsdk.windows.foundation.collections.IVectorView[ILampArrayEffect], winsdk.windows.foundation.collections.IIterable[ILampArrayEffect]]):
    repetition_mode: LampArrayRepetitionMode
    occurrences: _winrt.Int32
    effect_start_mode: LampArrayEffectStartMode
    size: _winrt.UInt32
    @staticmethod
    def _from(obj: _winrt.Object) -> LampArrayEffectPlaylist: ...
    def __init__(self) -> None: ...
    def append(self, effect: typing.Optional[ILampArrayEffect]) -> None: ...
    def first(self) -> typing.Optional[winsdk.windows.foundation.collections.IIterator[ILampArrayEffect]]: ...
    def get_at(self, index: _winrt.UInt32) -> typing.Optional[ILampArrayEffect]: ...
    def get_many(self, start_index: _winrt.UInt32, items_size: _winrt.UInt32) -> typing.Tuple[_winrt.UInt32, typing.List[typing.Optional[ILampArrayEffect]]]: ...
    def index_of(self, value: typing.Optional[ILampArrayEffect]) -> typing.Tuple[_winrt.Boolean, _winrt.UInt32]: ...
    def override_z_index(self, z_index: _winrt.Int32) -> None: ...
    def pause(self) -> None: ...
    @staticmethod
    def pause_all(value: typing.Iterable[typing.Optional[LampArrayEffectPlaylist]]) -> None: ...
    def start(self) -> None: ...
    @staticmethod
    def start_all(value: typing.Iterable[typing.Optional[LampArrayEffectPlaylist]]) -> None: ...
    def stop(self) -> None: ...
    @staticmethod
    def stop_all(value: typing.Iterable[typing.Optional[LampArrayEffectPlaylist]]) -> None: ...

class LampArraySolidEffect(_winrt.Object, interfaces=[ILampArrayEffect]):
    z_index: _winrt.Int32
    start_delay: winsdk.windows.foundation.TimeSpan
    duration: winsdk.windows.foundation.TimeSpan
    completion_behavior: LampArrayEffectCompletionBehavior
    color: winsdk.windows.ui.Color
    @staticmethod
    def _from(obj: _winrt.Object) -> LampArraySolidEffect: ...
    def __init__(self, lamp_array: typing.Optional[winsdk.windows.devices.lights.LampArray], lamp_indexes: typing.Sequence[_winrt.Int32]) -> None: ...

class LampArrayUpdateRequestedEventArgs(_winrt.Object, interfaces=[]):
    since_started: winsdk.windows.foundation.TimeSpan
    @staticmethod
    def _from(obj: _winrt.Object) -> LampArrayUpdateRequestedEventArgs: ...
    def set_color(self, desired_color: winsdk.windows.ui.Color) -> None: ...
    def set_color_for_index(self, lamp_index: _winrt.Int32, desired_color: winsdk.windows.ui.Color) -> None: ...
    def set_colors_for_indices(self, desired_colors: typing.Sequence[winsdk.windows.ui.Color], lamp_indexes: typing.Sequence[_winrt.Int32]) -> None: ...
    def set_single_color_for_indices(self, desired_color: winsdk.windows.ui.Color, lamp_indexes: typing.Sequence[_winrt.Int32]) -> None: ...

class ILampArrayEffect(typing.Protocol):
    z_index: _winrt.Int32
    @staticmethod
    def _from(obj: _winrt.Object) -> ILampArrayEffect: ...

