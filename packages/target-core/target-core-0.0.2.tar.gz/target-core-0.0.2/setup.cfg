[metadata]
name = target-core
version = attr: target.__version__
description = Singer.io target core features
long_description = file: README.md
long_description_content_type = text/markdown
author = Eddy âˆ†
author_email = edrdelta@gmail.com
url = https://gitlab.com/omegax/target-core
keywords = singer, singer.io, tap, target, target-core, target-s3-jsonl, target-s3-json, etl
license = Apache License 2.0
classifiers = 
	Development Status :: 2 - Pre-Alpha
	Operating System :: OS Independent
	License :: OSI Approved :: Apache Software License
	Programming Language :: Python :: 3

[options]
packages = find:
py_modules = target
python_requires = >=3.8
install_requires = 
	jsonschema==4.4.0
	boto3==1.21.38
	backoff==1.11.1
include_package_data = True
platforms = any

[options.package_data]
target = logging.conf

[options.extras_require]
test = 
	pytest-asyncio
	pytest-cov
	moto[s3]
lint = flake8
dist = 
	setuptools
	wheel
deploy = twine
docs = 
	sphinx
	sphinx-rtd-theme
	sphinx-automodapi
	numpydoc

[options.packages.find]
exclude = 
	tests

[options.entry_points]
console_scripts = 
	target-core = target:main

[tool:pytest]
addopts = -v --junitxml=report.xml --cov=target --cov-fail-under 95 --cov-report xml --cov-report term --cov-report html:htmlcov --doctest-modules
testpaths = tests
asyncio_mode = auto

[coverage:run]
branch = True
omit = 
	venv/*

[coverage:report]
show_missing = True
skip_covered = False

[flake8]
count = True
show-source = True
statistics = True
extend-exclude = venv
ignore = C901
max-line-length = 160
max-complexity = 10

[build_sphinx]
builder = html
warning-is-error = true

[tox:tox]
envlist = py{39,310,pi},dist,docs
isolated_build = True

[testenv]
deps = .[test]
commands = pytest {posargs}

[testenv:dist]
commands = python setup.py sdist bdist_wheel

[testenv:lint]
deps = flake8
commands = flake8 {posargs}

[testenv:static]
deps = mypy
commands = mypy {posargs}

[testenv:coverage]
deps = codecov
commands = codecov {posargs} || echo 'Codecov upload failed'

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
deps = .[test,docs]
commands = sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" -W -j auto --color -b html {posargs}
	python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:deploy]
deps = twine
commands = twine check dist/*
	twine upload --skip-existing {posargs} dist/*

[egg_info]
tag_build = 
tag_date = 0

