name: Build and Upload Python Package

on:
  push:
    tags:
      - "v*"
    branches:
      - master
  pull_request:

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel build
    - name: Build
      run: |
        python -m build --sdist --outdir dist/ .
    - name: Install
      run: |
        pip install dist/*
    - name: Run tests
      run: |
        pytest tests
        pytest tests --mpl
    - name: Store sdist
      uses: actions/upload-artifact@v2
      with:
        name: sdist
        path: |
          dist/*

  build_universal_wheel:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel build
    - name: Build
      run: |
        python -m build --wheel --outdir dist/ .
    - name: Install
      run: |
        pip install dist/*
    - name: Run tests
      run: |
        pytest tests
        pytest tests --mpl
    - name: Store sdist
      uses: actions/upload-artifact@v2
      with:
        name: wheel
        path: |
          dist/*

  upload:
    runs-on: ubuntu-latest
    # Only upload on a tag
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs:
      - build_universal_wheel
      - build_sdist
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel twine

    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2
      with:
        path: dist/
    - name: List all downloaded Artifacts
      run: |
        ls -lha dist/wheel dist/sdist
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/wheel/* dist/sdist/*
