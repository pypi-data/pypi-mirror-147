# automatically generated by the FlatBuffers compiler, do not modify

# namespace: isp

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class WorldParameters(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = WorldParameters()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsWorldParameters(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def WorldParametersBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x49\x53\x50\x46", size_prefixed=size_prefixed)

    # WorldParameters
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # WorldParameters
    def Carlatown(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def WorldParametersStart(builder): builder.StartObject(1)
def Start(builder):
    return WorldParametersStart(builder)
def WorldParametersAddCarlatown(builder, carlatown): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(carlatown), 0)
def AddCarlatown(builder, carlatown):
    return WorldParametersAddCarlatown(builder, carlatown)
def WorldParametersEnd(builder): return builder.EndObject()
def End(builder):
    return WorldParametersEnd(builder)