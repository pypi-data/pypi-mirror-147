Metadata-Version: 2.1
Name: my-best-python-project
Version: 0.0.4
Summary: My Best Python Project
Home-page: https://github.com/eggplants/my-best-python-project
Author: eggplants
Author-email: w10776e8w@yahoo.co.jp
License: MIT
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: all
Requires-Dist: black ; extra == 'all'
Requires-Dist: flake8 ; extra == 'all'
Requires-Dist: mypy ; extra == 'all'
Requires-Dist: isort ; extra == 'all'
Requires-Dist: setuptools (>=46.4.0) ; extra == 'all'
Requires-Dist: pre-commit ; extra == 'all'
Requires-Dist: types-setuptools ; extra == 'all'
Provides-Extra: dev
Requires-Dist: black ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: mypy ; extra == 'dev'
Requires-Dist: isort ; extra == 'dev'
Requires-Dist: setuptools (>=46.4.0) ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'
Provides-Extra: types
Requires-Dist: types-setuptools ; extra == 'types'

# My best python project

[![PyPI](
  https://img.shields.io/pypi/v/my-best-python-project?color=blue
  )](
  https://pypi.org/project/my-best-python-project/
) [![Maintainability](
  https://api.codeclimate.com/v1/badges/e6d94059d1dc7f08d2a4/maintainability
  )](
  https://codeclimate.com/github/eggplants/my-best-python-project/maintainability
) [![Release Package](
  https://github.com/eggplants/my-best-python-project/actions/workflows/release.yml/badge.svg
  )](
  https://github.com/eggplants/my-best-python-project/actions/workflows/release.yml
)

[![pre-commit.ci status](
  https://results.pre-commit.ci/badge/github/eggplants/my-best-python-project/master.svg
  )](
  https://results.pre-commit.ci/latest/github/eggplants/my-best-python-project/master
) [![pages-build-deployment](
  https://github.com/eggplants/my-best-python-project/actions/workflows/pages/pages-build-deployment/badge.svg
  )](
  https://github.com/eggplants/my-best-python-project/actions/workflows/pages/pages-build-deployment
)

This is a sample project.

## Installation

```sh
pip install git+https://github.com/eggplants/my-best-python-project
# or,
pip install my-best-python-project
```

## Usage

### CLI

```shellsession
$ mbpp -h
usage: mbpp [-h] [-o PATH] [--overwrite] [-q] [-V]

This command prints package's version.

optional arguments:
  -h, --help              show this help message and exit
  -o PATH, --output PATH  output to file (default: None)
  --overwrite             overwrite when using `-o` (default: False)
  -q, --quiet             quiet mode (default: False)
  -V, --version           show program's version number and exit

note:
    This package and tool is a sample.

$ mbpp
This package's version is: 0.0.1

$ mbpp -q
0.0.1

$ mbpp -o test.txt
Output: 'test.txt'

$ mbpp -o test.txt
Error: File 'test.txt' exists. To overwrite, use `-o`.

$ mbpp -o test.txt --overwrite
Output: 'test.txt'
```

### Library

To print this package's version:

```python
import my_best_python_project

print(my_best_python_project.__version__)
```

### Docker

To build docker image locally:

```
# build:
curl 'https://raw.githubusercontent.com/eggplants/my-best-python-project/master/Dockerfile' | docker build -t eggplanter/mbpp -f-
```

To run:

```shellsession
$ docker run --rm -it eggplanter/mbpp
This package's version is: 0.0.2

$ docker run --rm -it eggplanter/mbpp -h
usage: mbpp [-h] [-o PATH] [--overwrite] [-q] [-V]

This command prints package's version.

options:
  -h, --help              show this help message and exit
  -o PATH, --output PATH  output to file (default: None)
  --overwrite             overwrite when using `-o` (default: False)
  -q, --quiet             quiet mode (default: False)
  -V, --version           show program's version number and exit

note:
    This package and tool is a sample.
```

---

## Development

To setup development environment:

```sh
pip install -e ".[all]"
pre-commit install
```

To run pre-commit hooks manually:

```sh
pre-commit run
# or,
pre-commit run --all-fileso
```

## Create release

To create release with GitHub Release and publish packages on PyPI and GitHub Container Registry:

```sh
# update: `__version__` of `my_best_python_project/__init__.py`
# commit
git add . && git commit -m "update: <version>" && git push
# tag
git tag vX.Y.Z && git push --tags
```

## License

[MIT License](https://github.com/eggplants/my-best-python-project/blob/master/LICENSE)


