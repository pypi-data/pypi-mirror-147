Metadata-Version: 2.1
Name: crema
Version: 0.2.0
Summary: Convolutional-recurrent estimators for music analysis
Home-page: https://github.com/bmcfee/crema
Download-URL: https://github.com/bmcfee/crema/releases
Author: Brian McFee
License: ISC
Project-URL: Source, https://github.com/bmcfee/crema
Project-URL: Download, https://github.com/bmcfee/crema/releases
Platform: UNKNOWN
Classifier: License :: OSI Approved :: ISC License (ISCL)
Classifier: Programming Language :: Python
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown; charset=UTF-8
License-File: LICENSE.md
Requires-Dist: six
Requires-Dist: librosa (>=0.8)
Requires-Dist: jams (>=0.3)
Requires-Dist: scikit-learn (>=0.18)
Requires-Dist: keras (>=2.6)
Requires-Dist: tensorflow (>=2.0)
Requires-Dist: mir-eval (>=0.5)
Requires-Dist: pumpp (>=0.6)
Requires-Dist: h5py (>=2.7)
Provides-Extra: docs
Requires-Dist: numpydoc ; extra == 'docs'
Requires-Dist: sphinx ; extra == 'docs'
Provides-Extra: tests
Requires-Dist: pytest ; extra == 'tests'
Requires-Dist: pytest-cov ; extra == 'tests'
Provides-Extra: training
Requires-Dist: pescador (>=2.0.1) ; extra == 'training'
Requires-Dist: muda ; extra == 'training'

# crema
convolutional and recurrent estimators for music analysis

[![Testing](https://github.com/bmcfee/crema/actions/workflows/ci.yml/badge.svg)](https://github.com/bmcfee/crema/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/bmcfee/crema/branch/main/graph/badge.svg?token=3FujfyA0jz)](https://codecov.io/gh/bmcfee/crema)
[![GitHub license](https://img.shields.io/badge/license-BSD-blue.svg)](https://raw.githubusercontent.com/bmcfee/crema/master/LICENSE)
[![Documentation Status](https://readthedocs.org/projects/crema/badge/?version=latest)](http://crema.readthedocs.io/en/latest/?badge=latest)
[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1010486.svg)](https://doi.org/10.5281/zenodo.1010486)


Usage options
-------------

From the command-line, print to the screen in [JAMS](https://github.com/marl/jams) format:

```
python -m crema.analyze file.mp3
```

or save to a file:

```
python -m crema.analyze file.mp3 -o file.jams
```


From within python:

```python
from crema.analyze import analyze

jam = analyze(filename='/path/to/file.mp3')
```

or if you have an audio buffer in memory, librosa-style:

```python
jam = analyze(y=y, sr=sr)
```


