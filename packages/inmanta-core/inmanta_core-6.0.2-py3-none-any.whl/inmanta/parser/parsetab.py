
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right,nonassoc:nonassoc?leftORleftANDleftCMP_OPnonassocNOTleftINrightMLSrightMLS_ENDAND AS CID CMP_OP DEFINED DICT ELSE END ENTITY EXTENDS FALSE FLOAT FOR ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS MLS_END NOT NULL OR PARENTS PEQ REGEX REL RSTRING SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : emptytop_stmt : mls\n    | entity_def\n    | implement_def\n    | implementation_def\n    | relation\n    | statement\n    | typedef\n    | index\n    | importempty :import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n    | constructor\n    | function_call\n    | for\n    | ifstmt_list : statement stmt_liststmt_list : emptyassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF expression \':\' blockif : IF expression \':\' stmt_list ELSE \':\' blockentity_def : ENTITY CID \':\' entity_body_outerentity_def : ENTITY ID \':\' entity_body_outerentity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outerentity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outerentity_body_outer : mls entity_body ENDentity_body_outer : entity_body ENDentity_body_outer : ENDentity_body_outer : mls ENDentity_body : entity_body attrentity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n    | attr_base_type \'?\'attr_type : attr_type_opt\n    | attr_type_multi\n    | attr_base_typeattr : attr_type IDattr : attr_type ID \'=\' constant\n    | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_ns_list : ns_refimplement_ns_list : PARENTSimplement_ns_list : implement_ns_list \',\' implement_ns_listimplement_def : IMPLEMENT class_ref USING implement_ns_list empty\n    | IMPLEMENT class_ref USING implement_ns_list mlsimplement_def : IMPLEMENT class_ref USING implement_ns_list WHEN expression empty\n    | IMPLEMENT class_ref USING implement_ns_list WHEN expression mlsimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls blockimplementation : \':\' blockblock : stmt_list ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID mlsrelation : relation_def mlsrelation : relation_defrelation_def : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi REL class_refrelation_def : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\'multi : \'[\' INT \':\' \']\'multi : \'[\' INT \':\' INT \']\'multi : \'[\'  \':\' INT \']\'typedef : typedef_innertypedef : typedef_inner mlstypedef_inner : TYPEDEF ID AS ns_ref MATCHING expressiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\'expression : boolean_expression\n    | constant\n    | function_call\n    | var_ref\n    | constructor\n    | list_def\n    | map_def\n    | map_lookup\n    | index_lookup\n    | conditional_expressionexpression : \'(\' expression \')\'boolean_expression : expression CMP_OP expression\n    | expression IN expression\n    | expression AND expression\n    | expression OR expressionboolean_expression : NOT expressionboolean_expression : var_ref \'.\' ID IS DEFINEDboolean_expression : ID IS DEFINEDoperand : expressionmap_lookup : attr_ref \'[\' operand \']\'\n    | local_var \'[\' operand \']\'\n    | map_lookup \'[\' operand \']\'constructor : class_ref \'(\' param_list \')\'function_call : ns_ref \'(\' function_param_list \')\'list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_list\n    | STRING \':\' operand empty pair_list_emptypair_list : pair_list_empty\n    pair_list_empty : emptymap_def : \'{\' pair_list \'}\'index_lookup : class_ref \'[\' param_list \']\'index_lookup : attr_ref \'[\' param_list \']\'conditional_expression : expression \'?\' expression \':\' expressionconstant : INT\n    | FLOAT\n    constant : NULLconstant : REGEXconstant : TRUEconstant : FALSEconstant : STRINGconstant : RSTRINGconstant : mlsconstant_list : \'[\' constants \']\'constants : constantconstants :constants : constant \',\' constantswrapped_kwargs : \'*\' \'*\' operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n    param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n    | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n    function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n    | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list :var_ref : attr_refattr_ref : var_ref \'.\' IDlocal_var : ns_refvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLS_ENDmls : MLS mls'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,36,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,219,220,224,233,236,241,245,246,247,248,251,253,258,261,262,263,266,267,268,269,271,273,276,277,280,288,289,290,291,294,295,302,307,308,],[-12,0,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,-148,-155,-68,-15,-16,-17,-18,-19,-77,-1,-159,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-149,-154,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-145,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'MLS_END':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,22,23,24,25,26,27,28,33,37,47,48,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,87,89,103,107,108,116,117,118,121,122,123,124,125,127,129,132,140,143,146,158,160,161,162,166,167,170,171,176,177,179,180,186,187,188,189,191,193,194,198,199,200,201,204,206,207,215,218,219,220,221,224,233,234,236,241,243,245,246,247,248,251,252,253,254,258,261,262,263,266,267,268,269,271,273,276,277,280,284,288,289,290,291,294,295,302,306,307,308,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,13,-148,-155,13,-15,-16,-17,-18,-19,13,13,-159,-67,-78,-13,13,13,13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,13,13,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,13,13,13,13,-149,-154,-100,-22,-23,13,13,13,13,13,13,-97,13,13,-27,-33,-28,13,-54,-55,13,-104,13,13,-14,-105,13,-25,-93,-94,-95,-96,-145,-92,-99,-106,13,-111,13,-80,-34,-32,13,13,-57,-58,13,-73,-61,13,-81,-64,13,-103,-101,-113,-112,-102,13,-31,13,-29,-30,13,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,13,-59,-60,13,-75,-62,-26,-66,13,-69,-71,]),'MLS':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,22,23,24,25,26,27,28,33,37,47,48,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,87,89,103,107,108,116,117,118,121,122,123,124,125,127,129,132,140,143,146,158,160,161,162,166,167,170,171,176,177,179,180,186,187,188,189,191,193,194,198,199,200,201,204,206,207,215,218,219,220,221,224,233,234,236,241,243,245,246,247,248,251,252,253,254,258,261,262,263,266,267,268,269,271,273,276,277,280,284,288,289,290,291,294,295,302,306,307,308,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,14,-148,-155,14,-15,-16,-17,-18,-19,14,14,-159,-67,-78,-13,14,14,14,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,14,14,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,14,14,14,14,-149,-154,-100,-22,-23,14,14,14,14,14,14,-97,14,14,-27,-33,-28,14,-54,-55,14,-104,14,14,-14,-105,14,-25,-93,-94,-95,-96,-145,-92,-99,-106,14,-111,14,-80,-34,-32,14,14,-57,-58,14,-73,-61,14,-81,-64,14,-103,-101,-113,-112,-102,14,-31,14,-29,-30,14,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,14,-59,-60,14,-75,-62,-26,-66,14,-69,-71,]),'ENTITY':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,219,220,224,233,236,241,245,246,247,248,251,253,258,261,262,263,266,267,268,269,271,273,276,277,280,288,289,290,291,294,295,302,307,308,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,-148,-155,-68,-15,-16,-17,-18,-19,-77,-159,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-149,-154,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-145,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'IMPLEMENT':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,219,220,224,233,236,241,245,246,247,248,251,253,258,261,262,263,266,267,268,269,271,273,276,277,280,288,289,290,291,294,295,302,307,308,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,-148,-155,-68,-15,-16,-17,-18,-19,-77,-159,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-149,-154,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-145,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'IMPLEMENTATION':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,219,220,224,233,236,241,245,246,247,248,251,253,258,261,262,263,266,267,268,269,271,273,276,277,280,288,289,290,291,294,295,302,307,308,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,-148,-155,-68,-15,-16,-17,-18,-19,-77,-159,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-149,-154,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-145,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'INDEX':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,219,220,224,233,236,241,245,246,247,248,251,253,258,261,262,263,266,267,268,269,271,273,276,277,280,288,289,290,291,294,295,302,307,308,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,-148,-155,-68,-15,-16,-17,-18,-19,-77,-159,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-149,-154,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-145,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'IMPORT':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,219,220,224,233,236,241,245,246,247,248,251,253,258,261,262,263,266,267,268,269,271,273,276,277,280,288,289,290,291,294,295,302,307,308,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,-148,-155,-68,-15,-16,-17,-18,-19,-77,-159,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-149,-154,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-145,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'CID':([0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,22,23,24,25,26,27,28,29,33,34,37,47,48,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,88,90,102,103,107,108,116,117,118,120,121,122,123,124,125,127,129,131,132,135,140,142,143,146,158,160,161,162,166,167,170,171,176,177,179,180,182,186,187,188,189,191,193,194,198,199,200,201,204,206,207,216,217,219,220,221,223,224,227,228,233,234,235,236,241,243,245,246,247,248,249,251,252,253,258,261,262,263,266,267,268,269,270,271,273,275,276,277,280,288,289,290,291,294,295,302,307,308,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,38,-148,-155,16,-68,-15,-16,-17,-18,-19,-77,16,16,86,-159,-67,-78,-13,107,16,16,16,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,16,16,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,16,16,16,16,16,-149,-154,-100,-22,-23,16,16,16,16,16,16,16,-97,107,16,-142,16,16,-27,-33,-28,-12,-54,-55,16,-104,16,16,-14,-105,16,-25,16,-93,-94,-95,-96,-145,-92,-99,-106,16,-111,16,-80,-34,-32,16,16,-57,-58,16,16,-73,16,16,-61,16,16,-81,-64,16,-103,-101,-113,-112,-141,-102,16,-31,-29,-30,-12,-56,-74,-76,-70,-72,16,-63,-24,16,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'FOR':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,45,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,120,129,143,146,158,160,161,162,167,176,177,180,182,186,187,188,189,191,193,194,198,200,204,206,207,219,220,224,233,234,235,236,241,245,246,247,248,251,253,258,261,262,263,266,267,268,269,270,271,273,275,276,277,280,288,289,290,291,294,295,302,307,308,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,-148,-155,-68,-15,-16,-17,-18,-19,-77,-159,102,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-149,-154,-100,-22,-23,21,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,21,-93,-94,-95,-96,-145,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,21,21,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,21,-63,-24,21,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'IF':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,120,129,143,146,158,160,161,162,167,176,177,180,182,186,187,188,189,191,193,194,198,200,204,206,207,219,220,224,233,234,235,236,241,245,246,247,248,251,253,258,261,262,263,266,267,268,269,270,271,273,275,276,277,280,288,289,290,291,294,295,302,307,308,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,-148,-155,-68,-15,-16,-17,-18,-19,-77,-159,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-149,-154,-100,-22,-23,33,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,33,-93,-94,-95,-96,-145,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,33,33,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,33,-63,-24,33,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'TYPEDEF':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,219,220,224,233,236,241,245,246,247,248,251,253,258,261,262,263,266,267,268,269,271,273,276,277,280,288,289,290,291,294,295,302,307,308,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,-148,-155,-68,-15,-16,-17,-18,-19,-77,-159,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-149,-154,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-145,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,37,43,44,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,87,88,89,90,91,102,103,104,105,106,107,108,116,117,118,120,121,122,123,124,125,126,127,129,131,132,133,135,140,141,142,143,144,145,146,147,148,149,150,151,152,153,158,160,161,162,166,167,169,170,171,176,177,179,180,182,186,187,188,189,191,193,194,198,199,200,201,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,227,228,233,234,235,236,237,241,243,245,246,247,248,249,251,252,253,256,257,258,261,262,263,264,266,267,268,269,270,271,273,275,276,277,280,281,282,283,285,286,288,289,290,291,292,293,294,295,300,301,302,305,307,308,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-158,39,-148,-155,17,42,45,46,-68,-15,-16,-17,-18,-19,-77,17,17,69,85,-159,94,99,-67,-78,-13,108,115,69,69,119,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,69,69,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,69,17,17,17,17,17,17,69,175,176,108,-149,-154,-100,-22,-23,17,69,69,69,69,69,191,69,-97,108,115,99,-142,69,17,17,-27,17,17,-33,-36,209,210,-41,-42,-43,-37,-28,-12,-54,-55,69,-104,99,69,69,-14,-105,115,-25,17,-93,-94,-95,-96,-145,-92,-99,-106,69,-111,69,-80,17,-34,-32,-35,-44,-48,256,-39,-40,17,17,17,17,-57,-58,69,17,17,-73,17,17,-61,17,17,-81,175,-64,69,-103,-101,-113,-112,-141,-102,69,-31,-51,-38,-29,-30,-12,-56,290,-74,-76,-70,-72,17,-63,-24,17,-114,-98,-79,-45,-46,-47,-49,-50,-59,-60,-65,-75,303,304,-62,-26,-52,-53,-66,-124,-69,-71,]),':':([13,16,17,35,37,38,39,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,93,107,108,116,119,129,137,154,155,156,157,159,164,167,172,173,177,186,187,188,189,190,191,193,194,198,200,240,245,246,247,248,251,259,260,276,277,],[-158,-148,-155,-144,-159,87,89,120,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,165,-149,-154,-100,-145,-97,201,215,-152,-153,-147,218,225,-104,234,235,-105,-93,-94,-95,-96,243,-145,-92,-99,-106,-111,275,-103,-101,-113,-112,-102,-150,-151,-114,-98,]),'CMP_OP':([13,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,115,116,128,129,167,177,186,187,188,189,190,191,193,194,198,200,245,246,247,248,251,262,276,277,280,],[-158,-159,121,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-154,-155,121,121,-97,-104,-105,-93,-94,121,121,121,-145,-92,-99,-106,-111,-103,-101,-113,-112,-102,121,121,-98,121,]),'IN':([13,37,46,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,115,116,128,129,167,177,186,187,188,189,190,191,193,194,198,200,245,246,247,248,251,262,276,277,280,],[-158,-159,103,122,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-154,-155,122,122,122,-104,-105,122,-94,122,122,122,-145,-92,-99,-106,-111,-103,-101,-113,-112,-102,122,122,-98,122,]),'AND':([13,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,115,116,128,129,167,177,186,187,188,189,190,191,193,194,198,200,245,246,247,248,251,262,276,277,280,],[-158,-159,123,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-154,-155,123,123,-97,-104,-105,-93,-94,-95,123,123,-145,-92,-99,-106,-111,-103,-101,-113,-112,-102,123,123,-98,123,]),'OR':([13,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,115,116,128,129,167,177,186,187,188,189,190,191,193,194,198,200,245,246,247,248,251,262,276,277,280,],[-158,-159,124,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-154,-155,124,124,-97,-104,-105,-93,-94,-95,-96,124,-145,-92,-99,-106,-111,-103,-101,-113,-112,-102,124,124,-98,124,]),'?':([13,17,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,115,116,128,129,149,151,152,153,167,177,186,187,188,189,190,191,193,194,198,200,245,246,247,248,251,257,262,276,277,280,],[-158,-155,-159,125,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-154,-155,125,125,-97,211,212,213,-37,-104,-105,-93,-94,-95,-96,125,-145,-92,-99,-106,-111,-103,-101,-113,-112,-102,-38,125,125,-98,125,]),',':([13,16,17,35,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,97,100,107,108,111,113,114,115,116,119,129,135,155,156,157,160,161,162,167,175,177,186,187,188,189,191,193,194,198,200,231,232,245,246,247,248,250,251,263,276,277,299,],[-158,-148,-155,-144,-159,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,169,-130,-149,-154,179,-135,-136,-155,-100,-145,-97,199,216,217,-147,222,-54,-55,-104,237,-105,-93,-94,-95,-96,-145,-92,-99,-106,-111,-129,-128,-103,-101,-113,-112,278,-102,222,-114,-98,306,]),')':([13,37,44,52,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,95,96,97,98,100,108,109,110,111,112,113,114,115,116,128,129,167,168,169,174,175,177,178,179,186,187,188,189,191,193,194,198,200,229,230,231,232,238,239,245,246,247,248,251,274,276,277,],[-158,-159,-12,-12,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,167,-131,-12,-132,-130,-154,177,-137,-12,-138,-135,-136,-155,-100,193,-97,-104,-12,-12,236,-157,-105,-12,-12,-93,-94,-95,-96,-145,-92,-99,-106,-111,-133,-134,-129,-128,-139,-140,-103,-101,-113,-112,-102,-156,-114,-98,]),'ELSE':([13,23,24,25,26,27,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,116,117,118,120,129,167,177,180,181,182,183,186,187,188,189,191,193,194,198,200,241,242,245,246,247,248,251,273,276,277,295,],[-158,-15,-16,-17,-18,-19,-159,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-154,-100,-22,-23,-12,-97,-104,-105,-25,240,-12,-21,-93,-94,-95,-96,-145,-92,-99,-106,-111,-64,-20,-103,-101,-113,-112,-102,-24,-114,-98,-26,]),'END':([13,23,24,25,26,27,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,87,89,108,116,117,118,120,129,144,145,147,167,177,180,181,182,183,186,187,188,189,191,193,194,198,200,205,208,209,210,215,218,234,235,241,242,245,246,247,248,251,256,270,272,273,275,276,277,281,282,283,285,286,295,300,301,305,],[-158,-15,-16,-17,-18,-19,-159,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,146,146,-154,-100,-22,-23,-12,-97,206,207,-36,-104,-105,-25,241,-12,-21,-93,-94,-95,-96,-145,-92,-99,-106,-111,253,-35,-44,-48,146,146,-12,-12,-64,-20,-103,-101,-113,-112,-102,-51,-12,241,-24,-12,-114,-98,-45,-46,-47,-49,-50,-26,-52,-53,-124,]),']':([13,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,82,96,97,98,100,108,115,116,129,132,133,134,135,164,167,168,169,177,186,187,188,189,191,192,193,194,195,196,197,198,199,200,202,214,225,226,229,230,231,232,245,246,247,248,249,251,265,276,277,284,298,299,306,309,],[-158,-159,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-143,-131,-12,-132,-130,-154,-155,-100,-97,-12,-12,198,-142,224,-104,-12,-12,-105,-93,-94,-95,-96,-145,245,-92,-99,246,247,248,-106,-143,-111,251,257,266,267,-133,-134,-129,-128,-103,-101,-113,-112,-141,-102,291,-114,-98,-126,305,-125,-126,-127,]),'}':([13,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,83,108,116,129,136,138,139,167,177,186,187,188,189,191,193,194,198,200,245,246,247,248,250,251,276,277,278,279,296,297,],[-158,-159,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-155,-115,-116,-117,-118,-119,-120,-121,-122,-123,-147,-144,-12,-154,-100,-97,200,-110,-109,-104,-105,-93,-94,-95,-96,-145,-92,-99,-106,-111,-103,-101,-113,-112,-12,-102,-114,-98,-12,-12,-107,-108,]),'DICT':([13,37,70,71,72,73,74,75,76,77,78,87,89,144,145,147,200,205,208,209,210,215,218,256,281,282,283,285,286,300,301,305,],[-158,-159,-115,-116,-117,-118,-119,-120,-121,-122,-123,149,149,149,149,-36,-111,149,-35,-44,-48,149,149,-51,-45,-46,-47,-49,-50,-52,-53,-124,]),'.':([16,17,19,31,32,35,60,69,79,80,107,108,115,119,156,157,185,191,268,269,],[-148,-155,43,-147,55,-144,126,-155,-147,-144,-149,-154,-155,-145,55,-147,-147,-145,292,293,]),'(':([16,17,19,31,33,49,52,53,54,67,68,69,79,81,82,103,107,108,115,121,122,123,124,125,127,132,140,166,170,171,179,184,185,199,201,221,224,243,252,266,267,291,],[-148,-155,44,52,67,104,67,67,67,67,67,-155,52,44,67,67,-149,-154,-155,67,67,67,67,67,67,67,67,67,67,67,67,44,52,67,67,67,-73,67,67,-74,-76,-75,]),'USING':([16,40,107,],[-148,91,-149,]),'[':([16,17,33,42,52,53,54,64,67,68,69,79,80,81,82,84,94,103,107,108,115,121,122,123,124,125,127,132,140,152,153,163,166,170,171,179,191,199,201,221,224,243,245,246,251,252,254,266,267,291,303,304,],[-148,-155,82,93,82,82,82,127,82,82,-155,-146,132,133,82,140,93,82,-149,-154,-155,82,82,82,82,82,82,82,82,214,-37,93,82,82,82,82,-145,82,82,82,-73,82,-103,-101,-102,82,284,-74,-76,-75,93,93,]),'SEP':([17,31,41,50,69,79,108,115,153,157,161,185,203,],[-155,51,51,106,-155,131,-154,-155,106,51,106,51,106,]),'=':([17,31,32,35,99,108,115,119,185,209,210,256,],[-155,-147,53,-144,170,-154,170,-145,-147,254,255,287,]),'PEQ':([17,31,32,35,108,119,185,],[-155,-147,54,-144,-154,-145,-147,]),'AS':([17,50,85,86,108,],[-155,105,141,142,-154,]),'WHEN':([17,108,160,161,162,263,],[-155,-154,221,-54,-55,-56,]),'MATCHING':([17,108,203,],[-155,-154,252,]),'NOT':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,224,243,252,266,267,291,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-73,68,68,-74,-76,-75,]),'INT':([33,52,53,54,67,68,82,93,103,121,122,123,124,125,127,132,140,165,166,170,171,179,199,201,221,224,225,243,252,254,266,267,284,291,306,],[70,70,70,70,70,70,70,164,70,70,70,70,70,70,70,70,70,226,70,70,70,70,70,70,70,-73,265,70,70,70,-74,-76,70,-75,70,]),'FLOAT':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,224,243,252,254,266,267,284,291,306,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-73,71,71,71,-74,-76,71,-75,71,]),'NULL':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,224,243,252,254,255,266,267,284,287,291,306,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-73,72,72,72,286,-74,-76,72,301,-75,72,]),'REGEX':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,224,243,252,254,266,267,284,291,306,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-73,73,73,73,-74,-76,73,-75,73,]),'TRUE':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,224,243,252,254,266,267,284,291,306,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-73,74,74,74,-74,-76,74,-75,74,]),'FALSE':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,224,243,252,254,266,267,284,291,306,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-73,75,75,75,-74,-76,75,-75,75,]),'STRING':([33,52,53,54,67,68,82,83,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,224,243,252,254,266,267,278,284,291,306,],[76,76,76,76,76,76,76,137,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-73,76,76,76,-74,-76,137,76,-75,76,]),'RSTRING':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,224,243,252,254,266,267,284,291,306,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-73,77,77,77,-74,-76,77,-75,77,]),'{':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,224,243,252,255,266,267,287,291,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-73,83,83,83,-74,-76,83,-75,]),'EXTENDS':([38,39,],[88,90,]),'*':([44,52,101,132,133,169,179,],[101,101,171,101,101,101,101,]),'IS':([69,115,191,],[130,130,244,]),'PARENTS':([91,222,],[162,162,]),'REL':([92,166,224,266,267,291,],[163,227,-73,-74,-76,-75,]),'DEFINED':([130,244,],[194,277,]),'UNDEF':([254,],[283,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,2,],[1,36,]),'top_stmt':([0,2,],[2,2,]),'empty':([0,2,44,52,83,97,111,120,132,133,160,168,169,178,179,182,234,235,250,262,270,275,278,279,],[3,3,98,112,138,168,178,183,98,98,219,98,98,112,112,183,183,183,279,288,183,183,138,138,]),'mls':([0,2,14,22,28,33,52,53,54,67,68,82,87,89,103,121,122,123,124,125,127,132,140,160,166,170,171,179,199,201,215,218,221,234,243,252,254,262,284,290,306,],[4,4,37,47,48,78,78,78,78,78,78,78,144,144,78,78,78,78,78,78,78,78,78,220,78,78,78,78,78,78,144,144,78,270,78,78,78,289,78,302,78,]),'entity_def':([0,2,],[5,5,]),'implement_def':([0,2,],[6,6,]),'implementation_def':([0,2,],[7,7,]),'relation':([0,2,],[8,8,]),'statement':([0,2,120,182,234,235,270,275,],[9,9,182,182,182,182,182,182,]),'typedef':([0,2,],[10,10,]),'index':([0,2,],[11,11,]),'import':([0,2,],[12,12,]),'class_ref':([0,2,18,29,33,52,53,54,67,68,82,88,90,102,103,120,121,122,123,124,125,127,132,140,142,166,170,171,179,182,199,201,216,217,221,223,227,228,234,235,243,252,270,275,],[19,19,40,49,81,81,81,81,81,81,81,155,155,172,81,184,81,81,81,81,81,81,81,81,184,81,81,81,81,184,81,81,155,155,81,264,268,269,184,184,81,81,184,184,]),'relation_def':([0,2,],[22,22,]),'assign':([0,2,120,182,234,235,270,275,],[23,23,23,23,23,23,23,23,]),'constructor':([0,2,33,52,53,54,67,68,82,103,120,121,122,123,124,125,127,132,140,142,166,170,171,179,182,199,201,221,234,235,243,252,270,275,],[24,24,61,61,61,61,61,61,61,61,24,61,61,61,61,61,61,61,61,204,61,61,61,61,24,61,61,61,24,24,61,61,24,24,]),'function_call':([0,2,33,52,53,54,67,68,82,103,120,121,122,123,124,125,127,132,140,166,170,171,179,182,199,201,221,234,235,243,252,270,275,],[25,25,59,59,59,59,59,59,59,59,25,59,59,59,59,59,59,59,59,59,59,59,59,25,59,59,59,25,25,59,59,25,25,]),'for':([0,2,120,182,234,235,270,275,],[26,26,26,26,26,26,26,26,]),'if':([0,2,120,182,234,235,270,275,],[27,27,27,27,27,27,27,27,]),'typedef_inner':([0,2,],[28,28,]),'ns_ref':([0,2,18,29,30,33,52,53,54,67,68,82,87,88,89,90,91,102,103,120,121,122,123,124,125,127,132,140,141,142,144,145,166,170,171,179,182,199,201,205,215,216,217,218,221,222,223,227,228,234,235,243,252,270,275,],[31,31,41,41,50,79,79,79,79,79,79,79,153,157,153,157,161,41,79,185,79,79,79,79,79,79,79,79,203,41,153,153,79,79,79,79,185,79,79,153,153,157,157,153,79,161,41,41,41,185,185,79,79,185,185,]),'var_ref':([0,2,33,52,53,54,67,68,82,88,90,103,120,121,122,123,124,125,127,132,140,166,170,171,179,182,199,201,216,217,221,234,235,243,252,270,275,],[32,32,60,60,60,60,60,60,60,156,156,60,32,60,60,60,60,60,60,60,60,60,60,60,60,32,60,60,156,156,60,32,32,60,60,32,32,]),'attr_ref':([0,2,33,52,53,54,67,68,82,88,90,103,120,121,122,123,124,125,127,132,140,166,170,171,179,182,199,201,216,217,221,234,235,243,252,270,275,],[35,35,80,80,80,80,80,80,80,35,35,80,35,80,80,80,80,80,80,80,80,80,80,80,80,35,80,80,35,35,80,35,35,80,80,35,35,]),'expression':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,243,252,],[56,116,116,116,128,129,116,116,186,187,188,189,190,116,116,116,116,116,116,116,116,116,262,276,280,]),'boolean_expression':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,243,252,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'constant':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,243,252,254,284,306,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,281,299,299,]),'list_def':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,243,252,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'map_def':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,243,252,255,287,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,285,300,]),'map_lookup':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,243,252,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'index_lookup':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,243,252,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'conditional_expression':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,243,252,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'local_var':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,221,243,252,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'multi':([42,94,163,303,304,],[92,166,223,307,308,]),'param_list':([44,132,133,169,],[95,196,197,230,]),'param_list_empty':([44,132,133,168,169,],[96,96,96,229,96,]),'param_list_element':([44,52,132,133,169,179,],[97,113,97,97,97,113,]),'wrapped_kwargs':([44,52,132,133,169,179,],[100,100,100,100,100,100,]),'function_param_list':([52,179,],[109,239,]),'function_param_list_empty':([52,178,179,],[110,238,110,]),'function_param_list_element':([52,179,],[111,111,]),'operand':([52,53,54,82,103,127,132,140,166,170,171,179,199,201,],[114,117,118,135,173,192,195,202,135,231,232,114,135,250,]),'operand_list':([82,166,199,],[134,228,249,]),'pair_list':([83,278,],[136,296,]),'pair_list_empty':([83,278,279,],[139,139,297,]),'entity_body_outer':([87,89,215,218,],[143,158,258,261,]),'entity_body':([87,89,144,215,218,],[145,145,205,145,145,]),'attr':([87,89,144,145,205,215,218,],[147,147,147,208,208,147,147,]),'attr_type':([87,89,144,145,205,215,218,],[148,148,148,148,148,148,148,]),'attr_type_opt':([87,89,144,145,205,215,218,],[150,150,150,150,150,150,150,]),'attr_type_multi':([87,89,144,145,205,215,218,],[151,151,151,151,151,151,151,]),'attr_base_type':([87,89,144,145,205,215,218,],[152,152,152,152,152,152,152,]),'class_ref_list':([88,90,216,217,],[154,159,259,260,]),'implement_ns_list':([91,222,],[160,263,]),'id_list':([104,237,],[174,274,]),'block':([120,234,235,270,275,],[180,271,273,294,295,]),'stmt_list':([120,182,234,235,270,275,],[181,242,272,272,272,272,]),'implementation':([172,],[233,]),'constant_list':([254,],[282,]),'constants':([284,306,],[298,309,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',114),
  ('main -> empty','main',1,'p_main_term','plyInmantaParser.py',121),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',126),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',127),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',128),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',129),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',130),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',131),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',132),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',133),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',134),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',139),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',149),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',155),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',166),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',167),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',168),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',169),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',170),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',184),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list_empty','plyInmantaParser.py',191),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',196),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',202),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',208),
  ('if -> IF expression : block','if',4,'p_if','plyInmantaParser.py',214),
  ('if -> IF expression : stmt_list ELSE : block','if',7,'p_if_else','plyInmantaParser.py',220),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',231),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',237),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',242),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',248),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',253),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',258),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',263),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',268),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',273),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',279),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',284),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',290),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',296),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',297),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',303),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',304),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',305),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',310),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',316),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',317),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',323),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',329),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',335),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',341),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',346),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',352),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',358),
  ('implement_ns_list -> ns_ref','implement_ns_list',1,'p_implement_ns_list_ref','plyInmantaParser.py',365),
  ('implement_ns_list -> PARENTS','implement_ns_list',1,'p_implement_ns_list_parents','plyInmantaParser.py',370),
  ('implement_ns_list -> implement_ns_list , implement_ns_list','implement_ns_list',3,'p_implement_ns_list_collect','plyInmantaParser.py',375),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list empty','implement_def',5,'p_implement','plyInmantaParser.py',380),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list mls','implement_def',5,'p_implement','plyInmantaParser.py',381),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression empty','implement_def',7,'p_implement_when','plyInmantaParser.py',388),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression mls','implement_def',7,'p_implement_when','plyInmantaParser.py',389),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',399),
  ('implementation -> : mls block','implementation',3,'p_implementation','plyInmantaParser.py',411),
  ('implementation -> : block','implementation',2,'p_implementation_1','plyInmantaParser.py',416),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',421),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation_deprecated','plyInmantaParser.py',427),
  ('relation -> class_ref ID multi REL multi class_ref ID mls','relation',8,'p_relation_deprecated_comment','plyInmantaParser.py',438),
  ('relation -> relation_def mls','relation',2,'p_relation_outer_comment','plyInmantaParser.py',473),
  ('relation -> relation_def','relation',1,'p_relation_outer','plyInmantaParser.py',480),
  ('relation_def -> class_ref . ID multi REL class_ref . ID multi','relation_def',9,'p_relation','plyInmantaParser.py',485),
  ('relation_def -> class_ref . ID multi REL class_ref','relation_def',6,'p_relation_unidir','plyInmantaParser.py',491),
  ('relation_def -> class_ref . ID multi operand_list class_ref . ID multi','relation_def',9,'p_relation_annotated','plyInmantaParser.py',497),
  ('relation_def -> class_ref . ID multi operand_list class_ref','relation_def',6,'p_relation_annotated_unidir','plyInmantaParser.py',503),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',509),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',514),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',519),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',524),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',532),
  ('typedef -> typedef_inner mls','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',537),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING expression','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',544),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',550),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',559),
  ('expression -> boolean_expression','expression',1,'p_expression','plyInmantaParser.py',569),
  ('expression -> constant','expression',1,'p_expression','plyInmantaParser.py',570),
  ('expression -> function_call','expression',1,'p_expression','plyInmantaParser.py',571),
  ('expression -> var_ref','expression',1,'p_expression','plyInmantaParser.py',572),
  ('expression -> constructor','expression',1,'p_expression','plyInmantaParser.py',573),
  ('expression -> list_def','expression',1,'p_expression','plyInmantaParser.py',574),
  ('expression -> map_def','expression',1,'p_expression','plyInmantaParser.py',575),
  ('expression -> map_lookup','expression',1,'p_expression','plyInmantaParser.py',576),
  ('expression -> index_lookup','expression',1,'p_expression','plyInmantaParser.py',577),
  ('expression -> conditional_expression','expression',1,'p_expression','plyInmantaParser.py',578),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','plyInmantaParser.py',583),
  ('boolean_expression -> expression CMP_OP expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',588),
  ('boolean_expression -> expression IN expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',589),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',590),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',591),
  ('boolean_expression -> NOT expression','boolean_expression',2,'p_boolean_expression_not','plyInmantaParser.py',600),
  ('boolean_expression -> var_ref . ID IS DEFINED','boolean_expression',5,'p_boolean_expression_is_defined','plyInmantaParser.py',606),
  ('boolean_expression -> ID IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_short','plyInmantaParser.py',612),
  ('operand -> expression','operand',1,'p_operand','plyInmantaParser.py',618),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',623),
  ('map_lookup -> local_var [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',624),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',625),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',630),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',635),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',641),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',647),
  ('pair_list -> STRING : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',648),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',654),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',655),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',660),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',666),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',672),
  ('conditional_expression -> expression ? expression : expression','conditional_expression',5,'p_conditional_expression','plyInmantaParser.py',679),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',689),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',690),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',697),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',703),
  ('constant -> TRUE','constant',1,'p_constant_true','plyInmantaParser.py',709),
  ('constant -> FALSE','constant',1,'p_constant_false','plyInmantaParser.py',715),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',721),
  ('constant -> RSTRING','constant',1,'p_constant_rstring','plyInmantaParser.py',727),
  ('constant -> mls','constant',1,'p_constant_mls','plyInmantaParser.py',733),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',773),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',779),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',784),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',789),
  ('wrapped_kwargs -> * * operand','wrapped_kwargs',3,'p_wrapped_kwargs','plyInmantaParser.py',795),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',800),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',806),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',812),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',813),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',819),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',820),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',835),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',842),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',848),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',849),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',855),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',856),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',874),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',880),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',885),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',890),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',895),
  ('local_var -> ns_ref','local_var',1,'p_local_var','plyInmantaParser.py',901),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',907),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',913),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',924),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',936),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',942),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',947),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',952),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',958),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',964),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',969),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',975),
  ('mls -> MLS_END','mls',1,'p_mls_term','plyInmantaParser.py',980),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',985),
]
