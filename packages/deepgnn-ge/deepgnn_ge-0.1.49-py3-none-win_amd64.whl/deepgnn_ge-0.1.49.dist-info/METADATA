Metadata-Version: 2.1
Name: deepgnn-ge
Version: 0.1.49
Summary: Graph engine - distributed graph engine to host graphs.
Home-page: https://github.com/microsoft/DeepGNN
Author: DeepGNN Team
Author-email: DeepGNN@microsoft.com
License: MIT
Project-URL: Source, https://github.com/microsoft/DeepGNN
Platform: UNKNOWN
Requires-Python: >=3.7, <4
Description-Content-Type: text/markdown
Requires-Dist: numpy (>=1.17.0)
Requires-Dist: networkx (==2.5.1)
Requires-Dist: azure-datalake-store
Requires-Dist: opencensus-ext-azure
Requires-Dist: fsspec (>=2021.8.1)
Requires-Dist: scikit-learn
Requires-Dist: scipy

# DeepGNN Overview

DeepGNN is a framework for training machine learning models on large scale graph data. DeepGNN contains all the necessary features including:

* Distributed GNN training and inferencing on both CPU and GPU.
* Custom graph neural network design.
* Online Sampling: Graph Engine (GE) will load all graph data, each training worker will call GE to get node/edge/neighbor features and labels.
* Automatic graph partitioning.
* Highly performant and scalable.

## Usage

Install pip package:
```bash
python -m pip install deepgnn-torch
```
If you want to build package from source, see instructions in `CONTRIBUTING.md`.

Train and evaluate a graphsage model with pytorch on cora dataset:
```bash
cd examples/pytorch/graphsage
./run.sh
```

### Training other models

Examples folder contains various models one can experiment with DeepGNN. To train models with Tensorflow you need to install `deepgnn-tf` package, `deepgnn-torch` package contains packages to train pytorch examples. Each model folder contains a shell script `run.sh` that will train a corresponding model on a toy graph, a `README.md` file with a short description of a model, reference to original paper, and explanation of command line arguments.


