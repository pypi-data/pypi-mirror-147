/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If disabled, details about your open files will not be shared with other viewers of your room.
 */
export type DisableWebRTCSharing = boolean;
/**
 * The room to use for new shared document editing sessions. This may be overridden with the ?room URL parameter
 */
export type RoomName = PrivateRoom | CustomRoom;
/**
 * Generate a random room name.
 */
export type PrivateRoom = null;
/**
 * Use a custom room name.
 */
export type CustomRoom = string;
/**
 * A string to decrease room collisions on signaling servers. Where possible, this is coupled with a strong hash to generate less-guessable rooms
 */
export type RoomPrefix = PrependBaseURL | CustomPrefix;
/**
 * Use the host name of the server and base URL.
 */
export type PrependBaseURL = null;
/**
 * A custom prefix: longer is better.
 */
export type CustomPrefix = string;
/**
 * WebRTC Signaling Servers on which to announce your presence. Production usage should definitely set this value.
 */
export type SignalingURLs = CustomSignalingServers | DefaultPublicSignalingServers;
/**
 * Provide one (or preferrably more) custom WebSocket signaling servers: must start with ws:// or wss://.
 */
export type CustomSignalingServers = string[];
/**
 * Use the public signaling servers provided for the yjs community.
 */
export type DefaultPublicSignalingServers = null;
/**
 * The color of your shared editing cursor. Can be overriden with the ?usercolor URL parameter.
 */
export type UserColor = RandomUserColor | GivenUserColor;
/**
 * A random color will be chosen.
 */
export type RandomUserColor = null;
/**
 * Provide a user color as an RGB hex string.
 */
export type GivenUserColor = string;
/**
 * The username displayed to others with your shared cursor. Can be overriden with the ?username URL parameter.
 */
export type UserName = RandomUserName | GivenUserName;
/**
 * A random name will be chosen.
 */
export type RandomUserName = null;
/**
 * Provide a user name.
 */
export type GivenUserName = string;

/**
 * Settings for WebRTC-based collaborative editing
 */
export interface WebRTCSharing {
  disabled?: DisableWebRTCSharing;
  room?: RoomName;
  roomPrefix?: RoomPrefix;
  signalingUrls?: SignalingURLs;
  usercolor?: UserColor;
  username?: UserName;
}
