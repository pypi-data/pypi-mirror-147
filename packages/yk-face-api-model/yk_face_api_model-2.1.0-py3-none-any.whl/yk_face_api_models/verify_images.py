"""
VerifyImages request model.
"""
from yk_utils.models import Model, deserialize_model

VerifyImagesSchema = \
    {
        "type": "object",
        "required": [
            "first_image",
            "second_image"
        ],
        "properties": {
            "first_image": {
                "type": "string"
            },
            "second_image": {
                "type": "string"
            }
        }
    }


class VerifyImages(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, first_image: str = None, second_image: str = None):  # noqa: E501
        """VerifyImages - a model defined in Swagger

        :param first_image: The first_image of this VerifyImages.  # noqa: E501
        :type first_image: str
        :param second_image: The second_image of this VerifyImages.  # noqa: E501
        :type second_image: str
        """
        self.swagger_types = {
            'first_image': str,
            'second_image': str
        }

        self.attribute_map = {
            'first_image': 'first_image',
            'second_image': 'second_image'
        }

        self._first_image = first_image
        self._second_image = second_image

    @classmethod
    def from_dict(cls, dikt) -> 'VerifyImages':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The verify_images of this VerifyImages.  # noqa: E501
        :rtype: VerifyImages
        """
        return deserialize_model(dikt, cls)

    @property
    def first_image(self) -> str:
        """Gets the first_image of this VerifyImages.

        first image in base64 format  # noqa: E501

        :return: The first_image of this VerifyImages.
        :rtype: str
        """
        return self._first_image

    @first_image.setter
    def first_image(self, first_image: str):
        """Sets the first_image of this VerifyImages.

        first image in base64 format  # noqa: E501

        :param first_image: The first_image of this VerifyImages.
        :type first_image: str
        """
        if first_image is None:
            raise ValueError("Invalid value for `first_image`, must not be `None`")  # noqa: E501

        self._first_image = first_image

    @property
    def second_image(self) -> str:
        """Gets the second_image of this VerifyImages.

        second image in base64 format  # noqa: E501

        :return: The second_image of this VerifyImages.
        :rtype: str
        """
        return self._second_image

    @second_image.setter
    def second_image(self, second_image: str):
        """Sets the second_image of this VerifyImages.

        second image in base64 format  # noqa: E501

        :param second_image: The second_image of this VerifyImages.
        :type second_image: str
        """
        if second_image is None:
            raise ValueError("Invalid value for `second_image`, must not be `None`")  # noqa: E501

        self._second_image = second_image
