from ..edge_tools import to_json_serializable as to_json_serializable
from typing import Any

DEFAULT_DEREGISTER_FRAMES: int
DEFAULT_MAX_DISTANCE: int
DEFAULT_MIN_INERTIA: int
tracker_init_id: int
tracker_id: int

def get_tracker_init_id(): ...
def get_tracker_id(): ...

class TrackingResults(dict):
    def __init__(self, objects, algorithm) -> None: ...

RESULT_TYPE: Any

class TrackablePrediction:
    prediction: Any
    deregister_frames: Any
    min_inertia: Any
    tid: Any
    inertia: int
    disappeared_frames: int
    def __init__(self, prediction, deregister_frames, min_inertia, enter_cb: Any | None = ..., exit_cb: Any | None = ...) -> None: ...
    def init(self) -> None: ...
    def step(self, **kwargs) -> None: ...
    def handle_found(self, prediction) -> None: ...
    def handle_disappeared(self) -> None: ...
    @property
    def is_initialized(self): ...
    @property
    def is_lost(self): ...

def euclidean_distance(new_prediction, trackable, max_distance): ...

class TrackerAlgorithm:
    def __init__(self, deregister_frames, max_distance, min_inertia, enter_cb, exit_cb, trackable=..., distance_function=...) -> None: ...
    def update(self, predictions, **trackable_kwargs): ...
    def update_detections(self, tracked_objects, new_predictions, **trackable_kwargs): ...
