from edgeiq._parsers import parse_cvat_annotations as parse_cvat_annotations
from edgeiq.object_detection import ObjectDetectionResults as ObjectDetectionResults
from typing import Any

class FPS:
    def __init__(self) -> None: ...
    def start(self): ...
    def stop(self): ...
    def update(self) -> None: ...
    def get_elapsed_seconds(self): ...
    def compute_fps(self): ...

class ModelPerformanceAnalyser:
    def __init__(self, ground_truth_path, start_frame: int = ..., end_frame: Any | None = ...) -> None: ...
    model_predictions: Any
    def set_results(self, results) -> None: ...
    def get_detections_per_object(self, iou_threshold: float = ...): ...
    def get_iou_distribution(self, iou_threshold: float = ..., bins: int = ...): ...
    def get_overlap_distribution(self, iou_threshold: float = ..., bins: int = ...): ...
    def get_missed_detections(self, iou_threshold: float = ...): ...
    def get_class_based_stats(self, iou_threshold: float = ...): ...
    def write_analysis_output(self, output_dir: str = ..., filename_suffix: str = ..., iou_threshold: float = ...) -> None: ...
