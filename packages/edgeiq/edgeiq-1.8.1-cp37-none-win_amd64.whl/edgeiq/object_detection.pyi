from edgeiq import bounding_box as bounding_box, constants as constants, processing as processing
from edgeiq._production_client import PRODUCTION_CLIENT as PRODUCTION_CLIENT
from edgeiq.base_service import BaseService as BaseService
from edgeiq.edge_tools import to_json_serializable as to_json_serializable
from typing import Any

SUPPORTED_ENGINES: Any

class ObjectDetectionPrediction(bounding_box.BoundingBoxPrediction):
    def __init__(self, box, confidence, label, index) -> None: ...
    def __eq__(self, other): ...
    @property
    def label(self): ...
    @label.setter
    def label(self, label) -> None: ...
    @property
    def index(self): ...

class ObjectDetectionResults:
    def __init__(self, predictions, duration, image, **kwargs) -> None: ...
    def __eq__(self, other): ...
    @property
    def duration(self): ...
    @property
    def predictions(self): ...
    @predictions.setter
    def predictions(self, predictions) -> None: ...
    @property
    def image(self): ...

RESULT_TYPE: Any

class ObjectDetection(BaseService):
    def __init__(self, model_id) -> None: ...
    def detect_objects(self, image, confidence_level: float = ..., overlap_threshold: float = ...): ...
    def publish_analytics(self, results, tag: Any | None = ...) -> None: ...
